{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { cloudStorageAPI } from '../services/api';\nexport const useGoogleAuth = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check if user has stored tokens\n  useEffect(() => {\n    const storedToken = localStorage.getItem('google_access_token');\n    const tokenExpiry = localStorage.getItem('google_token_expiry');\n    console.log('üîç Checking stored tokens:', {\n      hasToken: !!storedToken,\n      hasExpiry: !!tokenExpiry,\n      expiry: tokenExpiry ? new Date(parseInt(tokenExpiry)) : null\n    });\n    if (storedToken && tokenExpiry) {\n      const now = new Date().getTime();\n      if (now < parseInt(tokenExpiry)) {\n        console.log('‚úÖ Using stored valid token');\n        setAccessToken(storedToken);\n        setIsAuthenticated(true);\n      } else {\n        console.log('‚è∞ Stored token expired, clearing...');\n        localStorage.removeItem('google_access_token');\n        localStorage.removeItem('google_token_expiry');\n      }\n    }\n  }, []);\n  const authenticate = async () => {\n    console.log('üöÄ Starting Google authentication...');\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log('üìû Calling API to get auth URL...');\n      const response = await cloudStorageAPI.getAuthUrl();\n      const authUrl = response.data.authUrl;\n      console.log('üîó Auth URL received:', authUrl);\n      if (!authUrl) {\n        throw new Error('No auth URL received from server');\n      }\n\n      // Create a promise to handle the popup result\n      const authPromise = new Promise((resolve, reject) => {\n        console.log('üîÑ Opening popup window...');\n        const popup = window.open(authUrl, 'google-auth', 'width=600,height=700,scrollbars=yes,resizable=yes,left=' + Math.round(window.screen.width / 2 - 300) + ',top=' + Math.round(window.screen.height / 2 - 350));\n        if (!popup) {\n          console.error('‚ùå Popup blocked!');\n          reject(new Error('Popup blocked. Please allow popups for this site and try again.'));\n          return;\n        }\n        console.log('‚úÖ Popup opened successfully');\n        let isResolved = false; // Track if we've already resolved/rejected\n\n        // Listen for messages from the popup\n        const messageHandler = event => {\n          var _event$data;\n          console.log('üì® Message received in parent window:', {\n            origin: event.origin,\n            expectedOrigin: window.location.origin,\n            data: event.data,\n            type: (_event$data = event.data) === null || _event$data === void 0 ? void 0 : _event$data.type\n          });\n\n          // Verify origin for security\n          if (event.origin !== window.location.origin) {\n            console.warn('‚ö†Ô∏è Message from unexpected origin:', event.origin);\n            return;\n          }\n          if (isResolved) {\n            console.log('‚ö†Ô∏è Already resolved, ignoring message');\n            return;\n          }\n          if (event.data.type === 'GOOGLE_AUTH_SUCCESS') {\n            var _event$data$accessTok;\n            console.log('‚úÖ Success message received:', {\n              hasAccessToken: !!event.data.accessToken,\n              tokenLength: (_event$data$accessTok = event.data.accessToken) === null || _event$data$accessTok === void 0 ? void 0 : _event$data$accessTok.length,\n              expiry: event.data.expiry\n            });\n            isResolved = true;\n            window.removeEventListener('message', messageHandler);\n            try {\n              popup.close();\n            } catch (e) {\n              console.log('Could not close popup:', e.message);\n            }\n            resolve({\n              accessToken: event.data.accessToken,\n              expiry: event.data.expiry\n            });\n          } else if (event.data.type === 'GOOGLE_AUTH_ERROR') {\n            console.error('‚ùå Error message received:', event.data.error);\n            isResolved = true;\n            window.removeEventListener('message', messageHandler);\n            try {\n              popup.close();\n            } catch (e) {\n              console.log('Could not close popup:', e.message);\n            }\n            reject(new Error(event.data.error || 'Authentication failed'));\n          }\n        };\n        window.addEventListener('message', messageHandler);\n        console.log('üëÇ Message listener added');\n\n        // Backup timeout mechanism - don't check popup.closed\n        const timeoutId = setTimeout(() => {\n          if (!isResolved) {\n            console.log('‚è∞ Authentication timeout - no response received');\n            isResolved = true;\n            window.removeEventListener('message', messageHandler);\n            try {\n              popup.close();\n            } catch (e) {\n              console.log('Could not close popup on timeout:', e.message);\n            }\n            reject(new Error('Authentication timeout - please try again'));\n          }\n        }, 120000); // 2 minutes timeout\n\n        // Optional: Try to detect popup closure with focus events\n        const handleFocus = () => {\n          // Small delay to let any pending messages arrive\n          setTimeout(() => {\n            if (!isResolved) {\n              console.log('üëÅÔ∏è Window regained focus, checking if popup was closed...');\n              try {\n                // Try to focus the popup - if it throws, popup is likely closed\n                popup.focus();\n                console.log('üîç Popup still accessible');\n              } catch (e) {\n                console.log('‚ùå Popup appears to be closed (focus failed)');\n                isResolved = true;\n                clearTimeout(timeoutId);\n                window.removeEventListener('message', messageHandler);\n                window.removeEventListener('focus', handleFocus);\n                reject(new Error('Authentication window was closed'));\n              }\n            }\n          }, 1000);\n        };\n        window.addEventListener('focus', handleFocus);\n\n        // Clean up focus listener when promise resolves\n        const originalResolve = resolve;\n        const originalReject = reject;\n        resolve = (...args) => {\n          clearTimeout(timeoutId);\n          window.removeEventListener('focus', handleFocus);\n          originalResolve(...args);\n        };\n        reject = (...args) => {\n          clearTimeout(timeoutId);\n          window.removeEventListener('focus', handleFocus);\n          originalReject(...args);\n        };\n      });\n      console.log('‚è≥ Waiting for authentication result...');\n\n      // Wait for authentication result\n      const {\n        accessToken,\n        expiry\n      } = await authPromise;\n      console.log('‚úÖ Authentication successful!', {\n        tokenLength: accessToken === null || accessToken === void 0 ? void 0 : accessToken.length,\n        expiry: new Date(parseInt(expiry))\n      });\n\n      // Store tokens\n      localStorage.setItem('google_access_token', accessToken);\n      localStorage.setItem('google_token_expiry', expiry.toString());\n      setAccessToken(accessToken);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('‚ùå Authentication failed:', error);\n      setError(error.message || 'Authentication failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    console.log('üö™ Logging out...');\n    localStorage.removeItem('google_access_token');\n    localStorage.removeItem('google_token_expiry');\n    setAccessToken(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n  return {\n    isAuthenticated,\n    accessToken,\n    isLoading,\n    error,\n    authenticate,\n    logout\n  };\n};\n_s(useGoogleAuth, \"RUW3uT7eji0XzlCGLIHvlEecDoA=\");","map":{"version":3,"names":["useState","useEffect","cloudStorageAPI","useGoogleAuth","_s","isAuthenticated","setIsAuthenticated","accessToken","setAccessToken","isLoading","setIsLoading","error","setError","storedToken","localStorage","getItem","tokenExpiry","console","log","hasToken","hasExpiry","expiry","Date","parseInt","now","getTime","removeItem","authenticate","response","getAuthUrl","authUrl","data","Error","authPromise","Promise","resolve","reject","popup","window","open","Math","round","screen","width","height","isResolved","messageHandler","event","_event$data","origin","expectedOrigin","location","type","warn","_event$data$accessTok","hasAccessToken","tokenLength","length","removeEventListener","close","e","message","addEventListener","timeoutId","setTimeout","handleFocus","focus","clearTimeout","originalResolve","originalReject","args","setItem","toString","logout"],"sources":["D:/pdf demo/frontend/src/hooks/useGoogleAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { cloudStorageAPI } from '../services/api';\r\n\r\nexport const useGoogleAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user has stored tokens\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('google_access_token');\r\n    const tokenExpiry = localStorage.getItem('google_token_expiry');\r\n    \r\n    console.log('üîç Checking stored tokens:', { \r\n      hasToken: !!storedToken, \r\n      hasExpiry: !!tokenExpiry,\r\n      expiry: tokenExpiry ? new Date(parseInt(tokenExpiry)) : null\r\n    });\r\n    \r\n    if (storedToken && tokenExpiry) {\r\n      const now = new Date().getTime();\r\n      if (now < parseInt(tokenExpiry)) {\r\n        console.log('‚úÖ Using stored valid token');\r\n        setAccessToken(storedToken);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        console.log('‚è∞ Stored token expired, clearing...');\r\n        localStorage.removeItem('google_access_token');\r\n        localStorage.removeItem('google_token_expiry');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const authenticate = async () => {\r\n    console.log('üöÄ Starting Google authentication...');\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      console.log('üìû Calling API to get auth URL...');\r\n      const response = await cloudStorageAPI.getAuthUrl();\r\n      const authUrl = response.data.authUrl;\r\n      \r\n      console.log('üîó Auth URL received:', authUrl);\r\n\r\n      if (!authUrl) {\r\n        throw new Error('No auth URL received from server');\r\n      }\r\n\r\n      // Create a promise to handle the popup result\r\n      const authPromise = new Promise((resolve, reject) => {\r\n        console.log('üîÑ Opening popup window...');\r\n        \r\n        const popup = window.open(\r\n          authUrl,\r\n          'google-auth',\r\n          'width=600,height=700,scrollbars=yes,resizable=yes,left=' + \r\n          Math.round(window.screen.width / 2 - 300) + ',top=' + \r\n          Math.round(window.screen.height / 2 - 350)\r\n        );\r\n\r\n        if (!popup) {\r\n          console.error('‚ùå Popup blocked!');\r\n          reject(new Error('Popup blocked. Please allow popups for this site and try again.'));\r\n          return;\r\n        }\r\n\r\n        console.log('‚úÖ Popup opened successfully');\r\n\r\n        let isResolved = false; // Track if we've already resolved/rejected\r\n\r\n        // Listen for messages from the popup\r\n        const messageHandler = (event) => {\r\n          console.log('üì® Message received in parent window:', {\r\n            origin: event.origin,\r\n            expectedOrigin: window.location.origin,\r\n            data: event.data,\r\n            type: event.data?.type\r\n          });\r\n\r\n          // Verify origin for security\r\n          if (event.origin !== window.location.origin) {\r\n            console.warn('‚ö†Ô∏è Message from unexpected origin:', event.origin);\r\n            return;\r\n          }\r\n\r\n          if (isResolved) {\r\n            console.log('‚ö†Ô∏è Already resolved, ignoring message');\r\n            return;\r\n          }\r\n\r\n          if (event.data.type === 'GOOGLE_AUTH_SUCCESS') {\r\n            console.log('‚úÖ Success message received:', {\r\n              hasAccessToken: !!event.data.accessToken,\r\n              tokenLength: event.data.accessToken?.length,\r\n              expiry: event.data.expiry\r\n            });\r\n            \r\n            isResolved = true;\r\n            window.removeEventListener('message', messageHandler);\r\n            \r\n            try {\r\n              popup.close();\r\n            } catch (e) {\r\n              console.log('Could not close popup:', e.message);\r\n            }\r\n            \r\n            resolve({\r\n              accessToken: event.data.accessToken,\r\n              expiry: event.data.expiry\r\n            });\r\n            \r\n          } else if (event.data.type === 'GOOGLE_AUTH_ERROR') {\r\n            console.error('‚ùå Error message received:', event.data.error);\r\n            \r\n            isResolved = true;\r\n            window.removeEventListener('message', messageHandler);\r\n            \r\n            try {\r\n              popup.close();\r\n            } catch (e) {\r\n              console.log('Could not close popup:', e.message);\r\n            }\r\n            \r\n            reject(new Error(event.data.error || 'Authentication failed'));\r\n          }\r\n        };\r\n\r\n        window.addEventListener('message', messageHandler);\r\n        console.log('üëÇ Message listener added');\r\n\r\n        // Backup timeout mechanism - don't check popup.closed\r\n        const timeoutId = setTimeout(() => {\r\n          if (!isResolved) {\r\n            console.log('‚è∞ Authentication timeout - no response received');\r\n            isResolved = true;\r\n            window.removeEventListener('message', messageHandler);\r\n            \r\n            try {\r\n              popup.close();\r\n            } catch (e) {\r\n              console.log('Could not close popup on timeout:', e.message);\r\n            }\r\n            \r\n            reject(new Error('Authentication timeout - please try again'));\r\n          }\r\n        }, 120000); // 2 minutes timeout\r\n\r\n        // Optional: Try to detect popup closure with focus events\r\n        const handleFocus = () => {\r\n          // Small delay to let any pending messages arrive\r\n          setTimeout(() => {\r\n            if (!isResolved) {\r\n              console.log('üëÅÔ∏è Window regained focus, checking if popup was closed...');\r\n              \r\n              try {\r\n                // Try to focus the popup - if it throws, popup is likely closed\r\n                popup.focus();\r\n                console.log('üîç Popup still accessible');\r\n              } catch (e) {\r\n                console.log('‚ùå Popup appears to be closed (focus failed)');\r\n                isResolved = true;\r\n                clearTimeout(timeoutId);\r\n                window.removeEventListener('message', messageHandler);\r\n                window.removeEventListener('focus', handleFocus);\r\n                reject(new Error('Authentication window was closed'));\r\n              }\r\n            }\r\n          }, 1000);\r\n        };\r\n\r\n        window.addEventListener('focus', handleFocus);\r\n\r\n        // Clean up focus listener when promise resolves\r\n        const originalResolve = resolve;\r\n        const originalReject = reject;\r\n        \r\n        resolve = (...args) => {\r\n          clearTimeout(timeoutId);\r\n          window.removeEventListener('focus', handleFocus);\r\n          originalResolve(...args);\r\n        };\r\n        \r\n        reject = (...args) => {\r\n          clearTimeout(timeoutId);\r\n          window.removeEventListener('focus', handleFocus);\r\n          originalReject(...args);\r\n        };\r\n      });\r\n\r\n      console.log('‚è≥ Waiting for authentication result...');\r\n      \r\n      // Wait for authentication result\r\n      const { accessToken, expiry } = await authPromise;\r\n      \r\n      console.log('‚úÖ Authentication successful!', {\r\n        tokenLength: accessToken?.length,\r\n        expiry: new Date(parseInt(expiry))\r\n      });\r\n      \r\n      // Store tokens\r\n      localStorage.setItem('google_access_token', accessToken);\r\n      localStorage.setItem('google_token_expiry', expiry.toString());\r\n      \r\n      setAccessToken(accessToken);\r\n      setIsAuthenticated(true);\r\n\r\n    } catch (error) {\r\n      console.error('‚ùå Authentication failed:', error);\r\n      setError(error.message || 'Authentication failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log('üö™ Logging out...');\r\n    localStorage.removeItem('google_access_token');\r\n    localStorage.removeItem('google_token_expiry');\r\n    setAccessToken(null);\r\n    setIsAuthenticated(false);\r\n    setError(null);\r\n  };\r\n\r\n  return {\r\n    isAuthenticated,\r\n    accessToken,\r\n    isLoading,\r\n    error,\r\n    authenticate,\r\n    logout\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}