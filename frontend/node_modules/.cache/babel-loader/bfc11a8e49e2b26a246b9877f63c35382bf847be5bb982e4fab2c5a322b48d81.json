{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { cloudStorageAPI } from '../services/api';\nexport const useGoogleAuth = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check if user has stored tokens\n  useEffect(() => {\n    const storedToken = localStorage.getItem('google_access_token');\n    const tokenExpiry = localStorage.getItem('google_token_expiry');\n    if (storedToken && tokenExpiry) {\n      const now = new Date().getTime();\n      if (now < parseInt(tokenExpiry)) {\n        setAccessToken(storedToken);\n        setIsAuthenticated(true);\n      } else {\n        // Token expired, clear storage\n        localStorage.removeItem('google_access_token');\n        localStorage.removeItem('google_token_expiry');\n      }\n    }\n  }, []);\n  const authenticate = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Get authorization URL\n      const response = await cloudStorageAPI.getAuthUrl();\n      const authUrl = response.data.authUrl;\n\n      // Open popup window for authentication\n      const popup = window.open(authUrl, 'google-auth', 'width=500,height=600,scrollbars=yes,resizable=yes');\n\n      // Listen for popup completion\n      const checkClosed = setInterval(async () => {\n        if (popup.closed) {\n          clearInterval(checkClosed);\n\n          // Check if authentication was successful\n          const urlParams = new URLSearchParams(window.location.search);\n          const code = urlParams.get('code');\n          if (code) {\n            try {\n              const tokenResponse = await cloudStorageAPI.handleCallback(code);\n              const {\n                accessToken,\n                expiryDate\n              } = tokenResponse.data;\n\n              // Store tokens\n              localStorage.setItem('google_access_token', accessToken);\n              localStorage.setItem('google_token_expiry', expiryDate.toString());\n              setAccessToken(accessToken);\n              setIsAuthenticated(true);\n\n              // Clean up URL\n              window.history.replaceState({}, document.title, window.location.pathname);\n            } catch (error) {\n              setError('Failed to complete authentication');\n              console.error('Authentication error:', error);\n            }\n          }\n          setIsLoading(false);\n        }\n      }, 1000);\n\n      // Handle popup blocked or closed\n      setTimeout(() => {\n        if (!popup || popup.closed) {\n          clearInterval(checkClosed);\n          setIsLoading(false);\n          setError('Authentication popup was blocked or closed');\n        }\n      }, 100);\n    } catch (error) {\n      setIsLoading(false);\n      setError('Failed to start authentication');\n      console.error('Auth error:', error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('google_access_token');\n    localStorage.removeItem('google_token_expiry');\n    setAccessToken(null);\n    setIsAuthenticated(false);\n  };\n  return {\n    isAuthenticated,\n    accessToken,\n    isLoading,\n    error,\n    authenticate,\n    logout\n  };\n};\n_s(useGoogleAuth, \"RUW3uT7eji0XzlCGLIHvlEecDoA=\");","map":{"version":3,"names":["useState","useEffect","cloudStorageAPI","useGoogleAuth","_s","isAuthenticated","setIsAuthenticated","accessToken","setAccessToken","isLoading","setIsLoading","error","setError","storedToken","localStorage","getItem","tokenExpiry","now","Date","getTime","parseInt","removeItem","authenticate","response","getAuthUrl","authUrl","data","popup","window","open","checkClosed","setInterval","closed","clearInterval","urlParams","URLSearchParams","location","search","code","get","tokenResponse","handleCallback","expiryDate","setItem","toString","history","replaceState","document","title","pathname","console","setTimeout","logout"],"sources":["D:/pdf demo/frontend/src/hooks/useGoogleAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { cloudStorageAPI } from '../services/api';\r\n\r\nexport const useGoogleAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user has stored tokens\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('google_access_token');\r\n    const tokenExpiry = localStorage.getItem('google_token_expiry');\r\n    \r\n    if (storedToken && tokenExpiry) {\r\n      const now = new Date().getTime();\r\n      if (now < parseInt(tokenExpiry)) {\r\n        setAccessToken(storedToken);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        // Token expired, clear storage\r\n        localStorage.removeItem('google_access_token');\r\n        localStorage.removeItem('google_token_expiry');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const authenticate = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Get authorization URL\r\n      const response = await cloudStorageAPI.getAuthUrl();\r\n      const authUrl = response.data.authUrl;\r\n\r\n      // Open popup window for authentication\r\n      const popup = window.open(\r\n        authUrl,\r\n        'google-auth',\r\n        'width=500,height=600,scrollbars=yes,resizable=yes'\r\n      );\r\n\r\n      // Listen for popup completion\r\n      const checkClosed = setInterval(async () => {\r\n        if (popup.closed) {\r\n          clearInterval(checkClosed);\r\n          \r\n          // Check if authentication was successful\r\n          const urlParams = new URLSearchParams(window.location.search);\r\n          const code = urlParams.get('code');\r\n          \r\n          if (code) {\r\n            try {\r\n              const tokenResponse = await cloudStorageAPI.handleCallback(code);\r\n              const { accessToken, expiryDate } = tokenResponse.data;\r\n              \r\n              // Store tokens\r\n              localStorage.setItem('google_access_token', accessToken);\r\n              localStorage.setItem('google_token_expiry', expiryDate.toString());\r\n              \r\n              setAccessToken(accessToken);\r\n              setIsAuthenticated(true);\r\n              \r\n              // Clean up URL\r\n              window.history.replaceState({}, document.title, window.location.pathname);\r\n            } catch (error) {\r\n              setError('Failed to complete authentication');\r\n              console.error('Authentication error:', error);\r\n            }\r\n          }\r\n          \r\n          setIsLoading(false);\r\n        }\r\n      }, 1000);\r\n\r\n      // Handle popup blocked or closed\r\n      setTimeout(() => {\r\n        if (!popup || popup.closed) {\r\n          clearInterval(checkClosed);\r\n          setIsLoading(false);\r\n          setError('Authentication popup was blocked or closed');\r\n        }\r\n      }, 100);\r\n\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setError('Failed to start authentication');\r\n      console.error('Auth error:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('google_access_token');\r\n    localStorage.removeItem('google_token_expiry');\r\n    setAccessToken(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return {\r\n    isAuthenticated,\r\n    accessToken,\r\n    isLoading,\r\n    error,\r\n    authenticate,\r\n    logout\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}