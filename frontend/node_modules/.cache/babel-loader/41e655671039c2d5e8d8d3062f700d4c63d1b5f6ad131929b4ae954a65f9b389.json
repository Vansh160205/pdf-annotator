{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  verifyToken: () => api.post('/auth/verify'),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// PDF API\nexport const pdfAPI = {\n  upload: file => {\n    const formData = new FormData();\n    formData.append('pdf', file);\n    return api.post('/pdf/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  list: () => api.get('/pdf/list'),\n  get: uuid => api.get(`/pdf/${uuid}`, {\n    responseType: 'arraybuffer',\n    headers: {\n      'Accept': 'application/pdf'\n    }\n  }),\n  delete: uuid => api.delete(`/pdf/${uuid}`),\n  rename: (uuid, name) => api.patch(`/pdf/${uuid}/rename`, {\n    name\n  })\n};\n\n// Highlight API\nexport const highlightAPI = {\n  create: highlightData => api.post('/highlights', highlightData),\n  getByPDF: pdfUuid => api.get(`/highlights/pdf/${pdfUuid}`),\n  update: (uuid, data) => api.patch(`/highlights/${uuid}`, data),\n  delete: uuid => api.delete(`/highlights/${uuid}`),\n  getAll: () => api.get('/highlights')\n};\n\n// Add to your existing API file\nexport const searchAPI = {\n  search: params => api.get('/search/search', {\n    params\n  }),\n  advancedSearch: data => api.post('/search/advanced-search', data),\n  getSuggestions: query => api.get('/search/suggestions', {\n    params: {\n      query\n    }\n  }),\n  indexPdf: pdfUuid => api.post(`/search/index-pdf/${pdfUuid}`)\n};\nexport const drawingAPI = {\n  create: drawingData => api.post('/drawings', drawingData),\n  getByPDF: pdfUuid => api.get(`/drawings/pdf/${pdfUuid}`),\n  getByPage: (pdfUuid, pageNumber) => api.get(`/drawings/pdf/${pdfUuid}/page/${pageNumber}`),\n  update: (uuid, data) => api.patch(`/drawings/${uuid}`, data),\n  delete: uuid => api.delete(`/drawings/${uuid}`),\n  getAll: () => api.get('/drawings'),\n  deleteByPDF: pdfUuid => api.delete(`/drawings/pdf/${pdfUuid}`)\n};\n\n// Add to your existing API file\nexport const cloudStorageAPI = {\n  // Get Google Drive authorization URL\n  getAuthUrl: () => api.get('/cloud-storage/auth/url'),\n  // Handle OAuth callback\n  handleCallback: code => api.get(`/cloud-storage/auth/callback?code=${code}`),\n  // Upload PDF to Google Drive\n  upload: (pdfUuid, data) => api.post(`/cloud-storage/upload/${pdfUuid}`, data),\n  import: data => api.post('/cloud-storage/import', data),\n  listFiles: params => api.get('/cloud-storage/files', {\n    params\n  }),\n  getCloudFiles: pdfUuid => api.get(`/cloud-storage/files/${pdfUuid}`),\n  createShareableLink: (cloudFileUuid, data) => api.post(`/cloud-storage/share/${cloudFileUuid}`, data),\n  deleteCloudFile: (cloudFileUuid, data) => api.delete(`/cloud-storage/files/${cloudFileUuid}`, {\n    data\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","verifyToken","getCurrentUser","get","pdfAPI","upload","file","formData","FormData","append","list","uuid","responseType","delete","rename","name","patch","highlightAPI","highlightData","getByPDF","pdfUuid","update","data","getAll","searchAPI","search","params","advancedSearch","getSuggestions","query","indexPdf","drawingAPI","drawingData","getByPage","pageNumber","deleteByPDF","cloudStorageAPI","getAuthUrl","handleCallback","code","import","listFiles","getCloudFiles","createShareableLink","cloudFileUuid","deleteCloudFile"],"sources":["D:/pdf demo/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  verifyToken: () => api.post('/auth/verify'),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n};\r\n\r\n// PDF API\r\nexport const pdfAPI = {\r\n  upload: (file) => {\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n    return api.post('/pdf/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  list: () => api.get('/pdf/list'),\r\n  get: (uuid) => api.get(`/pdf/${uuid}`, { \r\n    responseType: 'arraybuffer',\r\n    headers: {\r\n      'Accept': 'application/pdf'\r\n    }\r\n  }),\r\n  delete: (uuid) => api.delete(`/pdf/${uuid}`),\r\n  rename: (uuid, name) => api.patch(`/pdf/${uuid}/rename`, { name }),\r\n};\r\n\r\n// Highlight API\r\nexport const highlightAPI = {\r\n  create: (highlightData) => api.post('/highlights', highlightData),\r\n  getByPDF: (pdfUuid) => api.get(`/highlights/pdf/${pdfUuid}`),\r\n  update: (uuid, data) => api.patch(`/highlights/${uuid}`, data),\r\n  delete: (uuid) => api.delete(`/highlights/${uuid}`),\r\n  getAll: () => api.get('/highlights'),\r\n};\r\n\r\n\r\n// Add to your existing API file\r\nexport const searchAPI = {\r\n  search: (params) => api.get('/search/search', { params }),\r\n  advancedSearch: (data) => api.post('/search/advanced-search', data),\r\n  getSuggestions: (query) => api.get('/search/suggestions', { params: { query } }),\r\n  indexPdf: (pdfUuid) => api.post(`/search/index-pdf/${pdfUuid}`),\r\n};\r\n\r\nexport const drawingAPI = {\r\n  create: (drawingData) => api.post('/drawings', drawingData),\r\n  getByPDF: (pdfUuid) => api.get(`/drawings/pdf/${pdfUuid}`),\r\n  getByPage: (pdfUuid, pageNumber) => api.get(`/drawings/pdf/${pdfUuid}/page/${pageNumber}`),\r\n  update: (uuid, data) => api.patch(`/drawings/${uuid}`, data),\r\n  delete: (uuid) => api.delete(`/drawings/${uuid}`),\r\n  getAll: () => api.get('/drawings'),\r\n  deleteByPDF: (pdfUuid) => api.delete(`/drawings/pdf/${pdfUuid}`)\r\n};\r\n\r\n// Add to your existing API file\r\nexport const cloudStorageAPI = {\r\n  // Get Google Drive authorization URL\r\n  getAuthUrl: () => api.get('/cloud-storage/auth/url'),\r\n  \r\n  // Handle OAuth callback\r\n  handleCallback: (code) => api.get(`/cloud-storage/auth/callback?code=${code}`),\r\n  \r\n  // Upload PDF to Google Drive\r\n  upload: (pdfUuid, data) => api.post(`/cloud-storage/upload/${pdfUuid}`, data),\r\n  import: (data) => api.post('/cloud-storage/import', data),\r\n  listFiles: (params) => api.get('/cloud-storage/files', { params }),\r\n  getCloudFiles: (pdfUuid) => api.get(`/cloud-storage/files/${pdfUuid}`),\r\n  createShareableLink: (cloudFileUuid, data) => api.post(`/cloud-storage/share/${cloudFileUuid}`, data),\r\n  deleteCloudFile: (cloudFileUuid, data) => api.delete(`/cloud-storage/files/${cloudFileUuid}`, { data })\r\n};\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKxB,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAK3B,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;EAC5DC,WAAW,EAAEA,CAAA,KAAM5B,GAAG,CAACyB,IAAI,CAAC,cAAc,CAAC;EAC3CI,cAAc,EAAEA,CAAA,KAAM7B,GAAG,CAAC8B,GAAG,CAAC,UAAU;AAC1C,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG;EACpBC,MAAM,EAAGC,IAAI,IAAK;IAChB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEH,IAAI,CAAC;IAC5B,OAAOjC,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAES,QAAQ,EAAE;MACvC/B,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EACDkC,IAAI,EAAEA,CAAA,KAAMrC,GAAG,CAAC8B,GAAG,CAAC,WAAW,CAAC;EAChCA,GAAG,EAAGQ,IAAI,IAAKtC,GAAG,CAAC8B,GAAG,CAAC,QAAQQ,IAAI,EAAE,EAAE;IACrCC,YAAY,EAAE,aAAa;IAC3BpC,OAAO,EAAE;MACP,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EACFqC,MAAM,EAAGF,IAAI,IAAKtC,GAAG,CAACwC,MAAM,CAAC,QAAQF,IAAI,EAAE,CAAC;EAC5CG,MAAM,EAAEA,CAACH,IAAI,EAAEI,IAAI,KAAK1C,GAAG,CAAC2C,KAAK,CAAC,QAAQL,IAAI,SAAS,EAAE;IAAEI;EAAK,CAAC;AACnE,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG;EAC1B3C,MAAM,EAAG4C,aAAa,IAAK7C,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAEoB,aAAa,CAAC;EACjEC,QAAQ,EAAGC,OAAO,IAAK/C,GAAG,CAAC8B,GAAG,CAAC,mBAAmBiB,OAAO,EAAE,CAAC;EAC5DC,MAAM,EAAEA,CAACV,IAAI,EAAEW,IAAI,KAAKjD,GAAG,CAAC2C,KAAK,CAAC,eAAeL,IAAI,EAAE,EAAEW,IAAI,CAAC;EAC9DT,MAAM,EAAGF,IAAI,IAAKtC,GAAG,CAACwC,MAAM,CAAC,eAAeF,IAAI,EAAE,CAAC;EACnDY,MAAM,EAAEA,CAAA,KAAMlD,GAAG,CAAC8B,GAAG,CAAC,aAAa;AACrC,CAAC;;AAGD;AACA,OAAO,MAAMqB,SAAS,GAAG;EACvBC,MAAM,EAAGC,MAAM,IAAKrD,GAAG,CAAC8B,GAAG,CAAC,gBAAgB,EAAE;IAAEuB;EAAO,CAAC,CAAC;EACzDC,cAAc,EAAGL,IAAI,IAAKjD,GAAG,CAACyB,IAAI,CAAC,yBAAyB,EAAEwB,IAAI,CAAC;EACnEM,cAAc,EAAGC,KAAK,IAAKxD,GAAG,CAAC8B,GAAG,CAAC,qBAAqB,EAAE;IAAEuB,MAAM,EAAE;MAAEG;IAAM;EAAE,CAAC,CAAC;EAChFC,QAAQ,EAAGV,OAAO,IAAK/C,GAAG,CAACyB,IAAI,CAAC,qBAAqBsB,OAAO,EAAE;AAChE,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG;EACxBzD,MAAM,EAAG0D,WAAW,IAAK3D,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEkC,WAAW,CAAC;EAC3Db,QAAQ,EAAGC,OAAO,IAAK/C,GAAG,CAAC8B,GAAG,CAAC,iBAAiBiB,OAAO,EAAE,CAAC;EAC1Da,SAAS,EAAEA,CAACb,OAAO,EAAEc,UAAU,KAAK7D,GAAG,CAAC8B,GAAG,CAAC,iBAAiBiB,OAAO,SAASc,UAAU,EAAE,CAAC;EAC1Fb,MAAM,EAAEA,CAACV,IAAI,EAAEW,IAAI,KAAKjD,GAAG,CAAC2C,KAAK,CAAC,aAAaL,IAAI,EAAE,EAAEW,IAAI,CAAC;EAC5DT,MAAM,EAAGF,IAAI,IAAKtC,GAAG,CAACwC,MAAM,CAAC,aAAaF,IAAI,EAAE,CAAC;EACjDY,MAAM,EAAEA,CAAA,KAAMlD,GAAG,CAAC8B,GAAG,CAAC,WAAW,CAAC;EAClCgC,WAAW,EAAGf,OAAO,IAAK/C,GAAG,CAACwC,MAAM,CAAC,iBAAiBO,OAAO,EAAE;AACjE,CAAC;;AAED;AACA,OAAO,MAAMgB,eAAe,GAAG;EAC7B;EACAC,UAAU,EAAEA,CAAA,KAAMhE,GAAG,CAAC8B,GAAG,CAAC,yBAAyB,CAAC;EAEpD;EACAmC,cAAc,EAAGC,IAAI,IAAKlE,GAAG,CAAC8B,GAAG,CAAC,qCAAqCoC,IAAI,EAAE,CAAC;EAE9E;EACAlC,MAAM,EAAEA,CAACe,OAAO,EAAEE,IAAI,KAAKjD,GAAG,CAACyB,IAAI,CAAC,yBAAyBsB,OAAO,EAAE,EAAEE,IAAI,CAAC;EAC7EkB,MAAM,EAAGlB,IAAI,IAAKjD,GAAG,CAACyB,IAAI,CAAC,uBAAuB,EAAEwB,IAAI,CAAC;EACzDmB,SAAS,EAAGf,MAAM,IAAKrD,GAAG,CAAC8B,GAAG,CAAC,sBAAsB,EAAE;IAAEuB;EAAO,CAAC,CAAC;EAClEgB,aAAa,EAAGtB,OAAO,IAAK/C,GAAG,CAAC8B,GAAG,CAAC,wBAAwBiB,OAAO,EAAE,CAAC;EACtEuB,mBAAmB,EAAEA,CAACC,aAAa,EAAEtB,IAAI,KAAKjD,GAAG,CAACyB,IAAI,CAAC,wBAAwB8C,aAAa,EAAE,EAAEtB,IAAI,CAAC;EACrGuB,eAAe,EAAEA,CAACD,aAAa,EAAEtB,IAAI,KAAKjD,GAAG,CAACwC,MAAM,CAAC,wBAAwB+B,aAAa,EAAE,EAAE;IAAEtB;EAAK,CAAC;AACxG,CAAC;AACD,eAAejD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}